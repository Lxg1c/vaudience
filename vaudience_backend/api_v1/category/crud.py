from typing import List

from sqlalchemy.ext.asyncio import AsyncSession

from core.models import Category
from core.services.shared.dependencies import (
    get_all_records,
    create_record,
    update_record,
    delete_record,
)
from .schemas import (
    CategoryCreate,
    CategorySchema,
    CategoryUpdatePartial,
    CategoryUpdate,
)


# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
async def get_categories(
        session: AsyncSession,
) -> List[Category]:
    return await get_all_records(session, Category)


# –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
async def create_category(
        session: AsyncSession,
        category: CategoryCreate,
) -> Category:
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Pydantic-—Å—Ö–µ–º—É –≤ —Å–ª–æ–≤–∞—Ä—å –∏ —Å–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å
    return await create_record(session, Category, category.model_dump())


# –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –µ—ë ID
async def get_category_by_id(
        session: AsyncSession,
        category_id: int,
) -> Category | None:
    return await session.get(Category, category_id)


# –û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–ø–æ–ª–Ω–æ–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
async def update_product(  # üí° –ª—É—á—à–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≤ update_category
        session: AsyncSession,
        category_in: CategorySchema,  # —Ç–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è (ORM-–æ–±—ä–µ–∫—Ç)
        category_update: CategoryUpdate | CategoryUpdatePartial,  # –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        partial: bool = False,  # –µ—Å–ª–∏ True ‚Äî —á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
) -> CategorySchema:
    return await update_record(
        session,
        category_in,
        category_update.model_dump(exclude_unset=partial),  # –∏—Å–∫–ª—é—á–∞–µ–º –Ω–µ–∑–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏ partial
        partial,
    )


# –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
async def delete_category(
        session: AsyncSession,
        category: Category,
):
    await delete_record(record=category, session=session)
